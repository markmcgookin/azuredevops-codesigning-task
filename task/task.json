{
    "id": "5af48fa7-b149-4a5b-bec4-c2d5e3c511f9",
    "name": "codesigningwithdescription",
    "friendlyName": "Code Signing With Description",
    "description": "Codesign assemblies and applications, including a description.",
    "author": "Stefan Kert",
    "helpMarkDown": "[More Information](https://github.com/StefanKert/azuredevops-codesigning-task#readme)",
    "category": "Utility",
    "visibility": [
        "Build",
        "Release"
    ],
    "demands": [],
    "version": {
        "Major": "2",
        "Minor": "1",
        "Patch": "13"
    },
    "minimumAgentVersion": "2.116.0",
    "instanceNameFormat": "Code Signing $(filePath)",
    "inputs": [{
            "name": "secureFileId",
            "type": "secureFile",
            "label": "Secure File",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Select the certificate that was uploaded to `Secure Files` to be used to sign the given files."
        },
        {
            "name": "signCertPassword",
            "type": "string",
            "label": "Secure File Password",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Enter the password for the provided certificate. Use a new variable with its lock enabled on the Variables tab to encrypt this value."
        },
        {
            "name": "files",
            "type": "filePath",
            "label": "File(s) to sign",
            "defaultValue": "**/*.dll",
            "required": true,
            "helpMarkDown": "Relative path from the repo root to the file(s) you want to sign. You can use wildcards to specify multiple files ([more information](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/file-matching-patterns?view=azure-devops)). For example, **/bin/*.dll for all .DLL files in the 'bin' subfolder"
        },
        {
            "name": "timeServer",
            "type": "string",
            "label": "Timestamp Server Url",
            "defaultValue": "http://timestamp.digicert.com",
            "required": true,
            "helpMarkDown": "Absolute Url of the timestamp server to use."
        },
        {
            "name": "hashingAlgorithm",
            "type": "string",
            "label": "Hashing Algorithm",
            "defaultValue": "SHA256",
            "required": true,
            "helpMarkDown": "The file digest algorithm to use for creating file signatures (i.e. SHA256 or SHA1)."
        },
        {
            "name": "signToolLocationMethod",
            "type": "radio",
            "label": "Select signtool.exe location",
            "required": false,
            "defaultValue": "builtin",
            "options": {
                "builtin": "Built-in signtool",
                "location": "Specific location",
                "latest": "Latest version installed"
            }
        },
        {
            "name": "description",
            "type": "string",
            "label": "Add a description for the file being signed",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "UAC will display this description when installing the signed file"
        },
        {
            "name": "signToolLocation",
            "type": "string",
            "label": "Path to signtool.exe",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Optionally supply the path to singtool.",
            "visibleRule": "signToolLocationMethod = location"
        }
    ],
    "prejobexecution": {
        "Node": {
            "target": "precodesigning.js",
            "argumentFormat": ""
        }
    },
    "execution": {
        "Node": {
            "target": "codesigning.js"
        }
    },
    "postjobexecution": {
        "Node": {
            "target": "postcodesigning.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "NoMatchingFiles": "No matching files were found with search pattern: %s",
        "DeleteSecureFileFailed": "Failed to delete secure file downloaded from the server: %s"
    }
}